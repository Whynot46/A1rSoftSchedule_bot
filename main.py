import telebot
import os
import src.keyboards as kb
import src.db as db
from sys import platform


try:
    if platform == "linux" or platform == "linux2":
        os.system("clear")
    elif platform == "win32":
        os.system("cls")
except: pass


try:
    bot = telebot.TeleBot(kb.config.API_TOKEN)
    print(f"[INITIALIZATION BOT] OK")
except Exception as error:
    print(f"[INITIALIZATION BOT] {error}")


@bot.message_handler(commands=["start"])
def start_message(message):
    bot.send_message(message.chat.id,
                    "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –≤ –±–æ—Ç–µ: \n"
                    "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∞–π–∫–±–æ–ª—å–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π!üéâ \n"
                    "–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å –æ –≤—Å–µ—Ö –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö —Å—Ç—Ä–∞–π–∫–±–æ–ª—å–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö, –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ –≤—ã—Ö–æ–¥–Ω—ã–µ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–º –±–∏—Ç–≤–∞–º.\n"
                    "üèπ –î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Ç–≤–æ–∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è! üí™",
                    reply_markup=kb.main_keyboard)
    

@bot.message_handler(func=lambda message: message.text == "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–æ–±—ã—Ç–∏—è")
def input_event_name(message):
    bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", reply_markup = kb.cancel_keyboard)
    bot.register_next_step_handler(message, input_datetime)

def input_datetime(message):
    if message.text == "–û—Ç–º–µ–Ω–∞":
        cancel(message)
    elif len(message.text) <= 1:
        bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", reply_markup = kb.cancel_keyboard)
        bot.register_next_step_handler(message, input_datetime)
    else:
        kb.config.EVENT_TEMP["event_name"] = message.text
        bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", reply_markup = kb.cancel_keyboard)
        bot.register_next_step_handler(message, input_district)

        
def input_district(message):
    if message.text == "–û—Ç–º–µ–Ω–∞":
        cancel(message)
    elif len(message.text) <= 7:
        bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", reply_markup = kb.cancel_keyboard)
        bot.register_next_step_handler(message, input_district)
    else:
        kb.config.EVENT_TEMP["datetime"] = message.text
        bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –í–∞—à —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥", reply_markup = kb.district_keyboard)
        bot.register_next_step_handler(message, input_subject)


def input_subject(message):
    if message.text == "–û—Ç–º–µ–Ω–∞":
        cancel(message)
    elif not kb.config.is_district(message.text):
        bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥", reply_markup = kb.district_keyboard)
        bot.register_next_step_handler(message, input_subject)
    else:
        kb.config.EVENT_TEMP["district"] = message.text
        bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –í–∞—à –≥–æ—Ä–æ–¥/–æ–±–ª–∞—Å—Ç—å", reply_markup = kb.make_subject_keyboard(message.text))
        bot.register_next_step_handler(message, input_address)
        

def input_address(message):
    if message.text == "–û—Ç–º–µ–Ω–∞":
        cancel(message)
    elif not kb.config.is_subject(message.text):
        bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≥–æ—Ä–æ–¥/–æ–±–ª–∞—Å—Ç—å", reply_markup = kb.make_subject_keyboard(message.text))
        bot.register_next_step_handler(message, input_address)
    else:
        kb.config.EVENT_TEMP["subject"] = message.text
        bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ —Ç–æ—á–Ω—ã–π –∞–¥—Ä–µ—Å –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", reply_markup = kb.cancel_keyboard)
        bot.register_next_step_handler(message, input_location_info)
        

def input_location_info(message):
    if message.text == "–û—Ç–º–µ–Ω–∞":
        cancel(message)
    elif len(message.text) <= 1:
        bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∞–¥—Ä–µ—Å –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", reply_markup = kb.cancel_keyboard)
        bot.register_next_step_handler(message, input_location_info)
    else:
        kb.config.EVENT_TEMP["address"] = message.text
        bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏", reply_markup = kb.cancel_keyboard)
        bot.register_next_step_handler(message, input_game_type)
        
    
def input_game_type(message):
    if message.text == "–û—Ç–º–µ–Ω–∞":
        cancel(message)
    elif len(message.text) <= 1:
        bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏", reply_markup = kb.cancel_keyboard)
        bot.register_next_step_handler(message, input_game_type)
    elif len(message.text) > 200:
        bot.send_message(message.chat.id, "–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 200 —Å–∏–º–≤–æ–ª–æ–≤\n–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏", reply_markup = kb.cancel_keyboard)
        bot.register_next_step_handler(message, input_group_link)
    else:
        kb.config.EVENT_TEMP["location_info"] = message.text
        bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ —Ç–∏–ø –∏–≥—Ä—ã", reply_markup = kb.cancel_keyboard)
        bot.register_next_step_handler(message, input_event_info)
        

def input_event_info(message):
    if message.text == "–û—Ç–º–µ–Ω–∞":
        cancel(message)
    elif len(message.text) <= 1:
        bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ —Ç–∏–ø –∏–≥—Ä—ã", reply_markup = kb.cancel_keyboard)
        bot.register_next_step_handler(message, input_event_info)
    else:
        kb.config.EVENT_TEMP["game_type"] = message.text
        bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–±—ã—Ç–∏–∏", reply_markup = kb.cancel_keyboard)
        bot.register_next_step_handler(message, input_group_link)
        

def input_group_link(message):
    if message.text == "–û—Ç–º–µ–Ω–∞":
        cancel(message)
    elif len(message.text) <= 1:
        bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–±—ã—Ç–∏–∏", reply_markup = kb.cancel_keyboard)
        bot.register_next_step_handler(message, input_group_link)
    elif len(message.text) > 200:
        bot.send_message(message.chat.id, "–ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å 200 —Å–∏–º–≤–æ–ª–æ–≤\n–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–±—ã—Ç–∏–∏", reply_markup = kb.cancel_keyboard)
        bot.register_next_step_handler(message, input_group_link)
    else:
        kb.config.EVENT_TEMP["event_info"] = message.text
        bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≥—Ä—É–ø–ø—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", reply_markup = kb.cancel_keyboard)
        bot.register_next_step_handler(message, save_event_data)
        

def save_event_data(message):
    if message.text == "–û—Ç–º–µ–Ω–∞":
        cancel(message)
    elif not kb.config.is_url(message.text):
        bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –≥—Ä—É–ø–ø—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", reply_markup = kb.cancel_keyboard)
        bot.register_next_step_handler(message, save_event_data)
    else:
        kb.config.EVENT_TEMP["group_link"] = message.text
        db.add_new_event(kb.config.EVENT_TEMP["event_name"],
                        kb.config.EVENT_TEMP["datetime"],
                        kb.config.EVENT_TEMP["district"],
                        kb.config.EVENT_TEMP["subject"],
                        kb.config.EVENT_TEMP["address"],
                        kb.config.EVENT_TEMP["location_info"],
                        kb.config.EVENT_TEMP["game_type"],
                        kb.config.EVENT_TEMP["event_info"],
                        kb.config.EVENT_TEMP["group_link"])
        kb.config.EVENT_TEMP.clear()
        bot.send_message(message.chat.id, "–í–∞—à–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ", reply_markup = kb.main_keyboard)
        

def cancel(message):
    bot.send_message(message.chat.id,
                    "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞",
                    reply_markup=kb.main_keyboard)
        

@bot.message_handler(func=lambda message: message.text == "–ü—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–±—ã—Ç–∏—è")
def show_event(message):
    bot.send_message(message.chat.id, "–ö–∞–∫–æ–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=kb.district_inline_keyboard)


@bot.message_handler(content_types=["text"])
def send_text(message):
    pass


@bot.callback_query_handler(func = lambda call : True)
def distrit_callback(call):
    bot.edit_message_text(chat_id=call.message.chat.id, 
                          message_id=call.message.id,
                          text="–ö–∞–∫–æ–π –≥–æ—Ä–æ–¥/–æ–±–ª–∞—Å—Ç—å –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?")
    bot.edit_message_reply_markup(chat_id=call.message.chat.id, 
                          message_id=call.message.id,
                          reply_markup=kb.make_subject_keyboard(call.message.text))
    bot.register_next_step_handler(call.message, chouse_subject)
    
    
def chouse_subject(message):
    pass
    

if __name__ == "__main__": 
    try:
        print(f"[LAUNCHING BOT] OK")
        bot.infinity_polling(none_stop=True, interval=0, timeout=20)
    except Exception as error:
        print(f"[LAUNCHING BOT] {error}")
